/*
 */
package settlers.installer;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.List;
import javax.swing.JOptionPane;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import settlers.installer.model.Release;

/**
 *
 * @author hiran
 */
public class App extends javax.swing.JFrame {
    private static final Logger log = LogManager.getLogger(App.class);

    private final javax.swing.ImageIcon iiFound = new javax.swing.ImageIcon(getClass().getResource("/done_outline_FILL0_wght400_GRAD0_opsz48.png"));
    private final javax.swing.ImageIcon iiMissing = new javax.swing.ImageIcon(getClass().getResource("/dangerous_FILL0_wght400_GRAD0_opsz48.png"));
    
    /**
     * Creates new form App
     */
    public App() {
        initComponents();
        jProgressBar.setVisible(false);
        
        checkFiles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lbIconGithub = new javax.swing.JLabel();
        lbGameFiles = new javax.swing.JLabel();
        lbIconSettlers = new javax.swing.JLabel();
        lbDataFiles = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbResultGame = new javax.swing.JLabel();
        lbResultData = new javax.swing.JLabel();
        buttonBar = new javax.swing.JPanel();
        btInstallGame = new javax.swing.JButton();
        btInstallData = new javax.swing.JButton();
        btPlay = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Settlers-Installer");
        setName("Settlers-Installer"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lbIconGithub.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconGithub.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GitHub-Mark-120px-plus.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 30;
        getContentPane().add(lbIconGithub, gridBagConstraints);

        lbGameFiles.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lbGameFiles.setText("Game files");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 30;
        getContentPane().add(lbGameFiles, gridBagConstraints);

        lbIconSettlers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconSettlers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/siedler3-helme-circle-120.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 30;
        getContentPane().add(lbIconSettlers, gridBagConstraints);

        lbDataFiles.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lbDataFiles.setText("Data Files");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 30;
        getContentPane().add(lbDataFiles, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Welcome to settlers-remake, a clone of Bluebyteâ€™s Settlers III.");
        jLabel5.setAutoscrolls(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel5, gridBagConstraints);

        lbResultGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dangerous_FILL0_wght400_GRAD0_opsz48.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        getContentPane().add(lbResultGame, gridBagConstraints);

        lbResultData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dangerous_FILL0_wght400_GRAD0_opsz48.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        getContentPane().add(lbResultData, gridBagConstraints);

        buttonBar.setLayout(new java.awt.GridBagLayout());

        btInstallGame.setText("Install Game");
        btInstallGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInstallGameActionPerformed(evt);
            }
        });
        buttonBar.add(btInstallGame, new java.awt.GridBagConstraints());

        btInstallData.setText("Install Data");
        btInstallData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInstallDataActionPerformed(evt);
            }
        });
        buttonBar.add(btInstallData, new java.awt.GridBagConstraints());

        btPlay.setText("Play!");
        btPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPlayActionPerformed(evt);
            }
        });
        buttonBar.add(btPlay, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(buttonBar, gridBagConstraints);

        jProgressBar.setIndeterminate(true);
        jProgressBar.setStringPainted(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jProgressBar, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btInstallGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInstallGameActionPerformed
        log.debug("btInstallGameActionPerformed(...)");
        btInstallGame.setEnabled(false);
        btInstallData.setEnabled(false);
        btPlay.setEnabled(false);
        jProgressBar.setVisible(true);
        
        new Thread(new Runnable() {
            @Override
            public void run() {
                int x = 0;
                try {

                    Util.installLatest();
                    
                } catch(Exception e) {
                    JOptionPane.showMessageDialog(App.this, "Something went wrong.");
                } finally {
                    btInstallGame.setEnabled(true);
                    btInstallData.setEnabled(true);
                    btPlay.setEnabled(true);
                    jProgressBar.setVisible(false);
                    
                    checkFiles();
                }
            }
        }).start();
    }//GEN-LAST:event_btInstallGameActionPerformed

    private void btInstallDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInstallDataActionPerformed
        log.debug("btInstallDataActionPerformed(...)");
        btInstallGame.setEnabled(false);
        btInstallData.setEnabled(false);
        btPlay.setEnabled(false);
        jProgressBar.setVisible(true);
        
        new Thread(new Runnable() {
            @Override
            public void run() {
                int x = 0;
                try {
                    
                    while (x<100) {
                        x++;
                        //pm.setProgress(x);
                        try {
                            Thread.sleep(400);
                        } catch (InterruptedException ex) {
                            log.error("sleep interrupted", ex);
                        }
                    }
                    
                } catch(Exception e) {
                    JOptionPane.showMessageDialog(App.this, "Something went wrong.");
                } finally {
                    btInstallGame.setEnabled(true);
                    btInstallData.setEnabled(true);
                    btPlay.setEnabled(true);
                    jProgressBar.setVisible(false);

                    checkFiles();
                }
            }
        }).start();
    }//GEN-LAST:event_btInstallDataActionPerformed

    private void btPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPlayActionPerformed
        log.debug("btPlayActionPerformed(...)");
        btInstallGame.setEnabled(false);
        btInstallData.setEnabled(false);
        btPlay.setEnabled(false);
        jProgressBar.setVisible(true);
        
        new Thread(new Runnable() {
            @Override
            public void run() {
                int x = 0;
                try {

                    List<Release> installedReleases = Util.getInstalledReleases();
                    if (installedReleases != null && !installedReleases.isEmpty()) {
                        Util.runRelease(installedReleases.get(0));
                    }
                } catch(Exception e) {
                    JOptionPane.showMessageDialog(App.this, "Something went wrong.");
                } finally {
                    btInstallGame.setEnabled(true);
                    btInstallData.setEnabled(true);
                    btPlay.setEnabled(true);
                    jProgressBar.setVisible(false);

                    checkFiles();
                }
            }
        }).start();
    }//GEN-LAST:event_btPlayActionPerformed

    private void checkFiles() {
        boolean gameFiles = haveGameFiles();
        lbResultGame.setIcon(gameFiles? iiFound: iiMissing);
        btInstallGame.setVisible(!gameFiles);
        
        boolean dataFiles = haveDataFiles();
        lbResultData.setIcon(dataFiles? iiFound: iiMissing);
        btInstallData.setVisible(!dataFiles);
        
        btPlay.setVisible(dataFiles && gameFiles);
    }
    
    /**
     * Returns true if some game is installed that we can run.
     * 
     * @return true if a game is installed, false otherwise
     */
    private boolean haveGameFiles() {
        try {
            List<Release> installedReleases = Util.getInstalledReleases();
            if (installedReleases != null && !installedReleases.isEmpty()) {
                // check if updates are available

                try {
                    List<Release> availableReleases = Util.getGithubReleases();
                    if (installedReleases.get(0).getPublished_at().before(availableReleases.get(0).getPublished_at())) {
                        // update is available
                        log.debug("Update is available");
                        return true;
                    } else {
                        // we already have the latest version
                        log.debug("we already have the latest version");
                        return true;
                    }
                } catch (Exception e) {
                    // could not figure out if update is available. Let's assume we have the latest
                    log.debug("We assume to have the latest version", e);
                    return true;
                }
            } else {
                log.debug("No good version installed locally");
                return false;
            }
        } catch (FileNotFoundException e) {
            // if no file is found, we do not have a game
            log.debug("Could not check for local version");
            return false;
        }
    }

    /**
     * Validated a S3 data folder.
     * 
     * @return true if data files seem ok, false otherwise
     */
    private boolean haveDataFiles() {
        File dir = Util.getDataFolder();
        
        if (!dir.isDirectory()) {
            log.warn("File {} is not a directory.", dir);
            return false;
        }
        if (dir.listFiles().length < 2) {
            log.warn("File {} contains too few files", dir);
            return false;
        }
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                App app = new App();
                app.setLocationRelativeTo(null);
                app.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btInstallData;
    private javax.swing.JButton btInstallGame;
    private javax.swing.JButton btPlay;
    private javax.swing.JPanel buttonBar;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JLabel lbDataFiles;
    private javax.swing.JLabel lbGameFiles;
    private javax.swing.JLabel lbIconGithub;
    private javax.swing.JLabel lbIconSettlers;
    private javax.swing.JLabel lbResultData;
    private javax.swing.JLabel lbResultGame;
    // End of variables declaration//GEN-END:variables
}
